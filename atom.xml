<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Scribblings]]></title>
  <link href="http://tech.sunilnkumar.com/atom.xml" rel="self"/>
  <link href="http://tech.sunilnkumar.com/"/>
  <updated>2014-01-24T20:16:33+05:30</updated>
  <id>http://tech.sunilnkumar.com/</id>
  <author>
    <name><![CDATA[Sunil Kumar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rubymotion: Using ProgressHud while making Http calls]]></title>
    <link href="http://tech.sunilnkumar.com/2014/01/24/rubymotion-using-progresshud-while-making-http-calls"/>
    <updated>2014-01-24T20:04:00+05:30</updated>
    <id>http://tech.sunilnkumar.com/2014/01/24/rubymotion-using-progresshud-while-making-http-calls</id>
    <content type="html"><![CDATA[<p>With Rubymotion, there are quite a few methods to indicate activities. What I have used here is the MBProgressBarHud to indicate an ongoing activity ( an http call in progress )</p>

<p>The submit button on event &lsquo;Touch Up Inside&rsquo; invokes the action submit_mobile_number.</p>

<h4>controller/msisdn_view_controller.rb</h4>

<pre><code>outlet :submitButton, UIButton
ib_action :submit_mobile_number  #The submit button on event ‘Touch Up Inside’ invokes the action submit_mobile_number

def viewDidLoad
  @hud = MBProgressHUD.alloc.initWithWindow(UIApplication.sharedApplication.keyWindow)
  self.view.addSubview(@hud)
end

def submit_mobile_number(sender)
  msisdn = self.msisdnTextField.text
  prepare_for_submission
  User.registration msisdn, do
    after_submission
  end
end

def prepare_for_submission
  @hud.labelText = "Provisioning"
  @hud.show(true)
  self.view.userInteractionEnabled = false
end

def after_submission
  @hud.labelText = "Completed";
  @hud.hide(true)
  performSegueWithIdentifier('submission_segue', sender: self)
end
</code></pre>

<h4>models/user.rb</h4>

<pre><code>def self.registration(msisdn, &amp;callback)
  url = 'some_url'
  BW::HTTP.get(url) do |response|
    callback.call
  end
end
</code></pre>

<p>As you could see from the code above, we initiate an MBProgressHUDV view and add it as a subview of the main UIView. This is done in the viewDidLoad delegate.</p>

<p>Before the call to <strong>registration</strong> ( the User model method which makes an http connection ) is made, the <strong>prepare_for_submission</strong> method displays the hud. The <strong>after_submission</strong> method is passed as a callback block to the <strong>registration</strong> method. On completion of the http request, this block is executed which hides the hud and performs the segue to present the next controller.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku deployment with MongoDB database]]></title>
    <link href="http://tech.sunilnkumar.com/2013/12/18/heroku-deployment-with-mongodb-database"/>
    <updated>2013-12-18T19:01:00+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/12/18/heroku-deployment-with-mongodb-database</id>
    <content type="html"><![CDATA[<p>Currently, I develop a Rails app with <a href="http://www.mongodb.org/">mongodb</a> as the database.
When I decided to deploy this in heroku, as per the heroku dev doc, I was asked to simply install the MongoHQ Add-on, and specify the plan that I desire.</p>

<p>So, supposedly all I had to do was this,</p>

<div>
  <pre><code class='bash'>heroku addons:add mongohq:small</code></pre>
</div>


<p>and I would have the MONGOHQ_URL to add to the mongoid configuration ( config/mongoid.yml ).
But unfortunately, this would ask me to verify my heroku account</p>

<div>
  <pre><code class='bash'>Adding mongolab on chillrapi... failed
 !    Please verify your account to install this add-on
 !    For more information, see http://devcenter.heroku.com/categories/billing
 !    Verify now at https://heroku.com/verify</code></pre>
</div>


<p>Clicking on the verification link asks for my credit card details. Now, its mentioned that mongohq-small is a free version of the add on. So you could probably carry on providing your details. For the others, you may please read on.</p>

<p>MongoHQ is a cloud-based hosted database solution that allows developers to easily deploy, manage and scale both single and replica set MongoDB databases for their web and mobile applications.</p>

<p>I created a new database (SandBox, 512 MB &ndash;  thats all I needed anyways ) at MongoHQ.
On creating a new database, MongoHQ provides us with a mongo console and mongo uri connection strings.</p>

<p><strong>Mongo Console</strong></p>

<div>
  <pre><code class='bash'>mongo paulo.mongohq.com:10097/chillr_db -u &lt;user&gt; -p&lt;password&gt;</code></pre>
</div>


<p><strong>Mongo URI</strong></p>

<div>
  <pre><code class='bash'>mongodb://&lt;user&gt;:&lt;password&gt;@paulo.mongohq.com:10097/chillr_db</code></pre>
</div>


<p>Now, add a database user with a username, password. Check <a href="http://support.mongohq.com/common-questions/debugging-connection-issues.html">mongohq support docs</a> for reference.</p>

<p>You could try out the mongo console connection string from your local to check if the user credentials are valid. Once you find them valid, add the MONGOHQ_URL to the heroku config set.</p>

<div>
  <pre><code class='bash'>heroku config:set MONGOHQ_URL=&quot;mongodb://&lt;user&gt;:&lt;password&gt;@paulo.mongohq.com:10097/chillr_db&quot;</code></pre>
</div>


<p>Be sure to replace the username and password while adding.
Thats it, Mongodb hosted in MongoHQ should be now available for use in the application.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating from Wordpress to Jekyll in ten steps]]></title>
    <link href="http://tech.sunilnkumar.com/2013/09/01/migrating-from-wordpress-to-jekyll-in-ten-steps"/>
    <updated>2013-09-01T13:32:26+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/09/01/migrating-from-wordpress-to-jekyll-in-ten-steps</id>
    <content type="html"><![CDATA[<p>Migrating from Wordpress to <a href="http://jekyllrb.com/">Jekyll</a> is not at all a fussy process. Here, I will state down the 10 steps on how I moved my blog from Wordpress to github pages using jekyll.  It would be really good if you could just have a walk through jekyll&rsquo;s home pages to get an idea of the prerequisities and workings.</p>

<p>1) Export your blog from Wordpress and download the exported xml thats generated by Wordpress. Use xmllint for xml validation and correct any errors that might be there.</p>

<p>2) Jekyll provides with enough options to migrate from a different blogging system. What I used for the process was the tool, <a href="https://github.com/thomasf/exitwp">exitwp</a> by <a href="http://thomas.jossystem.se/">thomasf</a>. Followed the instructions in the README and this worked like a charm .</p>

<p>  If followed properly, the &lsquo;build&rsquo; directory will have the posts converted into markdown format which is required by jekyll.</p>

<p>3) Install the jekyll gem,</p>

<div>
  <pre><code class='bash'>$: gem install jekyll</code></pre>
</div>


<p>4) Now initialize your new blog</p>

<div>
  <pre><code class='bash'>$: jekyll new techblog</code></pre>
</div>


<p>cd into the techblog directory and you could see the directory structure there.</p>

<div>
  <pre><code class='bash'>_posts
_layouts
css
_config.yml
index.html</code></pre>
</div>


<p>This is the minimum directory structure that jenkyll requires inorder to work as a fully functional website. How cool, right?
Now all you need is to copy all the posts from the <code>&lsquo;build/jekyll/username.wordpress.com/<em>posts&rsquo;</code> directory of the exitwp tool to the </em>posts directory of your new &lsquo;techblog&rsquo;. Also you may want to add your own configurations in the config file (specially, the <a href="http://jekyllrb.com/docs/permalinks/">permalink</a> option)</p>

<p>5) Once you have done this, its time to view the website in our local machine. To do this run,</p>

<div>
  <pre><code class='bash'>$: jekyll serve -w   # -w, watch so that your changes are automatically reloaded</code></pre>
</div>


<p><code> <a href="http://localhost:4000">http://localhost:4000</a> </code> and you could view your minimalistic static website.</p>

<p>6) Now to host your website on <a href="http://pages.github.com/">github pages</a>, there are some special rules to be followed. The repo you create in github must be of the name, <strong>username.github.io</strong> and there fore in my case it was sunilkumarn.github.io . Create this repo in your github account and set the giturl in your local &lsquo;techblog&rsquo; directory.</p>

<p>7) Push your commits to github.</p>

<p>8) Check your mail to see if there are any build failure mails from github. If no, all is hunky dorry. Wait for something like 5 -10 minutes and type <code>&lsquo;<a href="http://username.github.io">http://username.github.io</a>&rsquo;</code> in your browser. You should see your website, Yeeyy!</p>

<p>9) To point a domain to your website, check <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">github pages help</a>. For me, I pointed a subdomain to my new blog.</p>

<ul>

<li>Github pages will mention the IP hosted. Point the A record of your domain to the mentioned IP from your domain registrar.</li>

<li>Also, add a new file CNAME to the root of your &#8216;techblog&#8217; directory. The file has a line containing your domain name, thats it.</li>
    eg, tech.sunilnkumar.com
</ul>


<p>10) Push your changes to github and wait for some time (cannot provide a good estimate). Your domain will be pointed to your new website hosted on github pages via jekyll. Also please do not forget to check if issues like broken urls, formatting issues, code highlightings etc etc exists. If yes, you might need to invest a bit more of your time to fix these as I had to.</p>

<p>The source of my website can be found <a href="https://github.com/sunilkumarn/sunilkumarn.github.io">here</a></p>

<p>Happy migrating :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js: Event Emitters and Listeners]]></title>
    <link href="http://tech.sunilnkumar.com/2013/07/07/node-js-event-emitters-and-listeners"/>
    <updated>2013-07-07T13:32:26+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/07/07/node-js-event-emitters-and-listeners</id>
    <content type="html"><![CDATA[<p>When building client side applications with Javascript, events and handling them are quite common. Consider, for example,</p>

<div>
  <pre><code class='javascript'>$('#toBeClicked').on('click', function() { alert('clicked') })</code></pre>
</div>


<p>Here we handle a <em>click event</em> on the element with id &lsquo;toBeClicked&rsquo;. When the element is clicked, a &lsquo;click&rsquo; event is emitted which is handled by the above statement written by us.</p>

<p>Just like in the DOM,  many objects in node emit events. When they do so, they inherit from the <strong>EventEmitter</strong> constructor.</p>

<p>Lets straight away build a custom event emitter and see whats going on,</p>

<div>
  <pre><code class='javascript'>EventEmitter = require('events').EventEmitter       // The Event Emitter constructor in the events.js module .</code></pre>
</div>


<p>Now, we create our custom emitter which is an instance of EventEmitter,</p>

<div>
  <pre><code class='javascript'>emitter = new EventEmitter();</code></pre>
</div>


<p>We listen for the error event,</p>

<div>
  <pre><code class='javascript'>emitter.on('error', function(msg1, msg2) { console.log('ERR: ' + msg1 + ' ' + msg2 ) })</code></pre>
</div>


<p>Here, <code>function(msg1, msg2) { console.log('ERR' + msg1 + ' ' + msg2 ) }</code></p>

<p>is the callback to be performed once the event is emitted,</p>

<p>We could also listen as,</p>

<div>
  <pre><code class='javascript'>emitter.addListener('error', function(msg1, msg2) { console.log('ERR: ' + msg1 + ' ' + msg2 ) } )</code></pre>
</div>


<p>Now we emit the error event,</p>

<div>
  <pre><code class='javascript'>emitter.emit('error', 'Bug detected', '@ Step 4')</code></pre>
</div>


<p>Once the &lsquo;error&rsquo; event is emitted, the listener performs the callback and we see the error logged in the console(as we have written in the callback function)
<code>ERR: Bug detected @ Step 4</code></p>

<p>We could add listeners on any more custom events and handle them when the event is emitted.</p>

<p>Now that we have got to know how events are emitted and handled via listeners, lets try out a small server that listens for requests and processes them.</p>

<div>
  <pre><code class='javascript'>var http = require('http'),
    sys = require('sys');

var server = http.createServer(function(request, response) {
  request.on('data', function (chunk) { console.log(chunk.toString()); });

  request.on('end', function() {
    response.write('Request Completed!');
    response.end();
  });

});

console.log(&quot;Starting up the server&quot;);
server.listen(8000);</code></pre>
</div>


<p>Here, <code>http.createServer</code> method returns an object which inherits from the EventEmitter constructor.</p>

<p>Check out the <a href="http://nodejs.org/api/http.html#http_http_createserver_requestlistener">nodejs api doc</a> for the createServer method in the<strong> http.js</strong> module,</p>

<p><code>http.createServer([requestListener]), </code><em>It says that requestListener is a function which is automatically added to the &lsquo;request&rsquo; event.</em></p>

<p>To check whats going on behind the scenes here, lets dive into the code base of nodejs,
As can be seen from code, the createServer method is within the http.js module. Inspecting the <strong>http.js</strong> module,</p>

<div>
  <pre><code class='javascript'>exports.createServer = function(requestListener) {
  return new Server(requestListener);
};</code></pre>
</div>


<p>Check for the <strong>_http_server.js</strong> module to find the <code>Server</code> constructor which has the following lines of code,</p>

<div>
  <pre><code class='javascript'>if (requestListener) {
  this.addListener('request', requestListener); // event listener for the server
}</code></pre>
</div>


<p>As per the above snippet, &lsquo;<strong>this</strong>&rsquo;(the current server instance ) listens for the &lsquo;request&rsquo; event and attaches the requestListener function to be performed when the event is emitted.</p>

<p>Here,</p>

<div>
  <pre><code class='javascript'>function(request, response) {
  request.on('data', function (chunk) { console.log(chunk.toString()); });

  request.on('end', function() {
    response.write('Request Completed!');
    response.end();
  });
}</code></pre>
</div>


<p><em>is our requestListener.</em></p>

<p>Now, further inspecting the <strong>_http_server.js </strong>module<strong>, </strong>we could also see how the request event is emitted,</p>

<div>
  <pre><code class='javascript'>self.emit('request', req, res); // event emitter for the server</code></pre>
</div>


<p><em>&lsquo;req&rsquo; and &lsquo;res&rsquo; are the request, response objects that are passed as arguments to the requestListener function called when the &lsquo;request&rsquo; event is emitted. Here self is &lsquo;this&rsquo; ( our current server instance)</em>.</p>

<p>We could well make the server listen for the request event on our own. For this,</p>

<div>
  <pre><code class='javascript'>var server = http.createServer()
server.on('request', function(request, response) {
  request.on('data', function (chunk) { console.log(chunk.toString()); });

  request.on('end', function() {
    response.write('Request Completed!');
    response.end();
  })
});</code></pre>
</div>


<p>Here when we create the server instance, we do not pass the requestListener( <em>Do notice that requestListener was only optional in http.createServer([requestListener]) </em>). Instead we attach a listener of our own on the server which listens to the &lsquo;request&rsquo; event and performs the callback function when the request event is emitted, i.e,</p>

<div>
  <pre><code class='javascript'>server.on('request', function(request, response) { ... });</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails admin with authlogic]]></title>
    <link href="http://tech.sunilnkumar.com/2013/07/06/rails-admin-with-authlogic"/>
    <updated>2013-07-06T23:13:31+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/07/06/rails-admin-with-authlogic</id>
    <content type="html"><![CDATA[<p>If you have used the rails_admin gem, you would have noticed that its tightly coupled with Devise. What happens if devise is not the pick and the application is already integrated with authlogic. Lets see,</p>

<p>After installing the rails_admin gem, create a &lsquo;<strong>rails_admin.rb</strong>&rsquo; file in <strong>config/initializers</strong>. Paste the following code,</p>

<div>
  <pre><code class='ruby'>RailsAdmin.config do |config|
    config.authorize_with do
      redirect_to root_path, :alert =&gt; &quot;You are not authorized!&quot; unless current_user.admin?
    end
  end

  RailsAdmin.config do |config|
    config.authenticate_with do
      unless current_user
        redirect_to login_url
      end
    end
  end</code></pre>
</div>


<p>The authentication block checks if the user is currently logged in and the authorization block checks if the logged in user is an admin or not.</p>

<p>Also add the rails admin route in the <strong>config/routes.rb</strong> file.</p>

<div>
  <pre><code class='ruby'>mount RailsAdmin::Engine =&gt; '/admin', :as =&gt; 'rails_admin'</code></pre>
</div>


<p>This should enable the admin to run at /admin, now authenticated and authorized using authlogic.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prototypal Inheritance in Javascript]]></title>
    <link href="http://tech.sunilnkumar.com/2013/06/28/prototypal-inheritance-in-javascript"/>
    <updated>2013-06-28T14:36:11+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/06/28/prototypal-inheritance-in-javascript</id>
    <content type="html"><![CDATA[<p>When I decided to get my hands on Javascript, the biggest road block for me was to understand and follow the prototypal inheritance model in Javascript. Coming from a Ruby background, the inheritance model I learned and understood was the classical one. The prototypal model had fundamental differences and did run me nuts at times. Here I try to make some note of what its all about going along a few snippets.</p>

<p><strong>What exactly is a prototype?</strong>
As explained in &lsquo;Javascript: The Definitive Guide&rsquo; &ndash; An object’s prototype is a reference to another object from which properties are inherited. Every JavaScript object has a second JavaScript object (or null, but this is rare) associated with it. This second object is known as a prototype, and the first object inherits properties from the prototype.</p>

<p>In Javascript, an object can be created with object literals, with the new keyword, and (in ECMAScript 5) with the Object.create() function</p>

<ol>
<li><p> obj = { }                                                    //object literals, objects created will have Object.prototype as their prototype</p></li>
<li><p> obj = Object.create(args, [args2])        //Object.create(), Objects created like this will have the first argument to the create method as their prototype</p></li>
<li><p> obj = new Constructor invocation     //new Keyword, objects created this way will have the value of the prototype property of the constructor function as their prototype</p></li>
</ol>


<p><strong>Object.prototype</strong>: Its one of those rare objects which do not have a prototype, and hence is not associated with any other object.</p>

<p>Lets try and study the prototype of objects created via each of these 3 ways.
1) <strong>object literals</strong>, <strong>{ }</strong></p>

<div>
  <pre><code class='javascript'>obj = { }</code></pre>
</div>


<p>obj will have always Object.prototype as its prototype. Inspecting obj in your console, and you will find this.</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2013/06/prototype11.png"><img src="http://sunilkumarn.files.wordpress.com/2013/06/prototype11.png?w=570" alt="Prototype1" /></a></p>

<p><strong><strong>proto</strong></strong> is the prototype object ( Object.prototype) from which obj inherits the properties.</p>

<p>You can always use Object.getPrototypeOf to check the prototype of an object. The below screenshot shows the prototype object of obj.</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2013/06/prototype2.png"><img src="http://sunilkumarn.files.wordpress.com/2013/06/prototype2.png?w=570" alt="prototype2" /></a></p>

<p>2)<strong> Object.create()</strong></p>

<div>
  <pre><code class='javascript'>obj = Object.create(Object.prototype)</code></pre>
</div>


<p>Doing this is exactly the same as creating an object with literals( obj = { }). This is because the first argument to the create method forms the prototype of the newly created object, obj. In our statement we have specified Object.prototype as the first argument to be used. Also note that Object.create also takes a second optional argument which defines the properties of the object.</p>

<p>We could specify an object or null as the first argument to the create method. If we pass null as the first argument to create, then the newly created object won&rsquo;t inherit any property.</p>

<div>
  <pre><code class='javascript'>Mammal = Object.create(null, {knownTime: { value: 'infinity' }} )</code></pre>
</div>


<p>We have an object Mammal with no inherited properties. It has a property of its own, (knownTime with a value set to &lsquo;infinity&rsquo;).</p>

<div>
  <pre><code class='javascript'>Man = Object.create(Mammal)</code></pre>
</div>


<p>Object.getPrototypeOf(Man) will return an object with a single property, knownTime. Also,</p>

<div>
  <pre><code class='javascript'>Man.knownTime
   -&gt; 'infinity'</code></pre>
</div>


<p>Now create another object inheriting from &lsquo;Man&rsquo;</p>

<div>
  <pre><code class='javascript'>John = Object.create(Man)
John.knownTime
   -&gt; 'infinity'</code></pre>
</div>


<p>Now, lets fiddle around these objects.
Try adding new properties to these objects.</p>

<p>Set a max height of Mammals.</p>

<div>
  <pre><code class='javascript'>Mammal.maxHeight = '200'</code></pre>
</div>




<div>
  <pre><code class='javascript'>Man.maxHeight
   -&gt; '200'
John.maxHeight
   -&gt; '200'</code></pre>
</div>


<p>Set a nice rhythmic vocal for mammals.</p>

<div>
  <pre><code class='javascript'>Mammal.sound = function() { return( &quot;Wholaa!&quot; ) }</code></pre>
</div>




<div>
  <pre><code class='javascript'>Mammal.sound()
  -&gt; &quot;Wholaa!&quot;
Man.sound()
  -&gt; &quot;Wholaa!&quot;
John.sound()
  -&gt; &quot;Wholaa!&quot;</code></pre>
</div>


<p>Sure, Man has a different kind of a pitch from the other mammals.</p>

<div>
  <pre><code class='javascript'>Man.sound = function() { return( &quot;Cheerpp!&quot; )}</code></pre>
</div>




<div>
  <pre><code class='javascript'>Man.sound()
   -&gt; &quot;Cheerpp!&quot;
John.sound()
   -&gt; &quot;Cheerpp!&quot;</code></pre>
</div>


<p>Object.getPrototypeOf(John) returns an object(Man &ndash; with a property &lsquo;sound&rsquo;) which has another object(Mammal &ndash; with properties &lsquo;knownTime, maxHeight and sound&rsquo;) as its prototype.</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2013/06/prototype3.png"><img src="http://sunilkumarn.files.wordpress.com/2013/06/prototype3.png" alt="prototype3" /></a></p>

<p>The prototype chain looks as follows</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2013/06/prototype_chain4-new-page.png"><img src="http://sunilkumarn.files.wordpress.com/2013/06/prototype_chain4-new-page.png?w=570" alt="Prototype_Chain4 - New Page" /></a></p>

<p>Object <strong>Mammal</strong> has properties &lsquo;knownTime&rsquo;, &lsquo;maxHeight&rsquo; and and the method &lsquo;sound&rsquo;.  <strong>Man</strong> has Mammal as its prototype object and hence inherits these properties from Mammal.  However, it overrides the &lsquo;sound&rsquo; method. <strong>John </strong>has Man as its prototype object and hence inherits properties from Man(which includes Man&rsquo;s own properties and properties inherited from Mammal).</p>

<p>3) <strong>new keyword followed by a Constructor Invocation</strong></p>

<p>Try this,</p>

<div>
  <pre><code class='javascript'>obj = new Object()</code></pre>
</div>


<p>Here again, this is exactly the same as Object.create(Object.prototype) and {}. The prototype of the object, obj is Object.prototype.</p>

<p>Here, Object is the constructor which when invoked using the new keyword will return a new object which inherits properties from the prototype of the constructor (here, Object.prototype).</p>

<p><strong>Constructor</strong>(as per the Definitive Guide): A constructor is a function designed for the initialization of newly created objects. Constructors are invoked using the new keyword. Constructor invocations using new automatically create the new object, so the constructor itself only needs to initialize the state of that new object. The critical feature of constructor invocations is that the prototype property of the constructor is used as the prototype of the new object.</p>

<p>Also, note that every JavaScript function (except functions returned by the EC-MAScript 5 Function.bind() method) automatically has a prototype property. Hence, a constructor being merely a function also has the prototype property.
To make this more sense, lets create a constructor and try and figure out what exactly happens.</p>

<div>
  <pre><code class='javascript'>function Startup(config) {
   this.config = config ;
   this.motto = function(verbiage) {
      return(&quot;Our motto is&quot; + verbiage)
    }
 }</code></pre>
</div>


<p>Now, create a new instance</p>

<div>
  <pre><code class='javascript'>s1 = new Startup(true)</code></pre>
</div>


<p>s1 is an object with Startup.prototype as its prototype, and hence inherits properties from Startup.prototype</p>

<div>
  <pre><code class='javascript'>s1.config
  -&gt; true
s1.motto(&quot;we change&quot;)
  -&gt; &quot;Our motto is we change&quot;</code></pre>
</div>


<p>Create another instance,</p>

<div>
  <pre><code class='javascript'>s2 = new Startup(false)</code></pre>
</div>


<p>s2 is an object with Startup.prototype as its prototype, and hence inherits properties from Startup.prototype</p>

<div>
  <pre><code class='javascript'>s2.config
  -&gt; false
s2.motto(&quot;we build&quot;)
  -&gt; &quot;Our motto is we build!&quot;</code></pre>
</div>


<p>Now, we did like a bit more functionality to be achieved by all objects instantiated from Startup. For that to happen, we need to add more properties to Startup.prototype</p>

<div>
  <pre><code class='javascript'>Startup.prototype.space = function(people) { return(people/ 5) }
Startup.prototype.stream = function() {
   if(this.config == true)
       return(&quot;service&quot;) ;
   else
       return(&quot;business&quot;);
 }</code></pre>
</div>


<p>Now, you could use these properties on the instances,</p>

<div>
  <pre><code class='javascript'>s1.space(25)
   -&gt; 5
s1.stream()
   -&gt; &quot;service&quot;

s2.space(40)
   -&gt; 8
s2.stream()
   -&gt; &quot;business&quot;</code></pre>
</div>


<p><a href="http://sunilkumarn.files.wordpress.com/2013/06/prototoype_5-new-page-11.png"><img src="http://sunilkumarn.files.wordpress.com/2013/06/prototoype_5-new-page-11.png?w=570" alt="Prototoype_5 - New Page (1)" /></a></p>

<p>As is clear from the image above, we have 4 objects here, the constructor object(Startup) with its property(prototype), the prototype object (Startup.prototype) with all its properties and the instances(s1 &amp; s2).<a href="http://sunilkumarn.files.wordpress.com/2013/06/prototoype_5-new-page.png">
</a></p>

<p>Now suppose we alter the prototype property of Startup</p>

<div>
  <pre><code class='javascript'>Startup.prototype = { stream : function() {return(&quot;No more a startup&quot;) }}</code></pre>
</div>


<p>As is quite evident,</p>

<div>
  <pre><code class='javascript'>s1.stream()
   -&gt; &quot;No more a startup!&quot;
s2.stream()
   -&gt; &quot;No more a startup!&quot;</code></pre>
</div>


<p>On this account, it might be clear on how to add new methods to be used by arrays, dates and other such objects created via a Constructor Invocation. With <em>Array being the constructor function and Array.prototype being the prototype of all objects instantiated via the Array Constructor invocation</em>,</p>

<p>A clone on all arrays,</p>

<div>
  <pre><code class='javascript'>Array.prototype.clone = function() {
   return this.concat()
   }

[1,2,3].clone()
   -&gt; [1,2,3]</code></pre>
</div>


<p>Clear off the array,</p>

<div>
  <pre><code class='javascript'>Array.prototype.clear = function() {
    this.length = 0 ;
    return this ;
   }

[1,2,3].clear()
    -&gt; []</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js: Streams and pipes.]]></title>
    <link href="http://tech.sunilnkumar.com/2013/06/23/node-js-streams-and-pipes"/>
    <updated>2013-06-23T00:27:26+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/06/23/node-js-streams-and-pipes</id>
    <content type="html"><![CDATA[<p>Node.js is used for building a lot of network applications and there&rsquo;s a lot of data being passed around. This could well be huge in size. In node, all this data is processed the moment its received, piece by piece. This is done with the help of streams. Here we discuss the usage of streams by writing a small node script that handles file upload.</p>

<p>Here&rsquo;s the actual piece of code that handles a file upload and responds back to the client with the progress of the upload.</p>

<div>
  <pre><code class='javascript'>var http = require('http'),
  sys = require('sys'),
  fs = require('fs');

  var server = http.createServer();
  console.log(&quot;Starting up the server&quot;);
  server.listen(8000);

  server.on('request', function(request, response) {
    var file = fs.createWriteStream('copy.csv');
    var fileSize = request.headers['content-length'];
    var uploadedSize = 0;

    request.on('data', function (chunk) {
      uploadedSize += chunk.length;
      uploadProgress = (uploadedSize/fileSize) * 100;
      response.write(Math.round(uploadProgress) + &quot;%&quot; + &quot; uploaded\n&quot; );
      var bufferStore = file.write(chunk);
      if(bufferStore == false)
        request.pause();
    });

    file.on('drain', function() {
      request.resume();
    })

    request.on('end', function() {
      response.write('Upload done!');
      response.end();
    })

  });</code></pre>
</div>


<p>The basics: We create a node server that listens on port 8000. Upon receival of a request, we create a write stream ( the destination file path ). Each chunk of data received is written on to the destination path, the upload progress is calculated and responded back.</p>

<p>Lets break up the above snippet into pieces and make an analysis of whats happening.</p>

<p>A writeStream is created and &lsquo;copy.csv&rsquo; is the destination path to which the received data will be written.</p>

<div>
  <pre><code class='javascript'>var file = fs.createWriteStream('copy.csv');</code></pre>
</div>


<p>The following piece forms the core of the upload process.</p>

<div>
  <pre><code class='javascript'>request.on('data', function (chunk) {
    var bufferStore = file.write(chunk);
    if(bufferStore == false)
      request.pause();
    uploadedSize += chunk.length;
    uploadProgress = (uploadedSize/fileSize) * 100;
    response.write(Math.round(uploadProgress) + &quot;%&quot; + &quot; uploaded\n&quot; );
  });

  file.on('drain', function() {
    request.resume();
  })</code></pre>
</div>


<p>Looking at the code &ndash; on receiving each chunk of data ( via the read stream ), its written to the write stream as
<code>file.write(chunk);</code></p>

<p>Right now, we need to pause a bit to check whether there might be a cause of worry in this whole read-write streaming process. The answer is yes, and is very obvious. <strong>There exists a real possibility that the rate at which the data is written to the writeStream is less than the rate at which its read from the readStream</strong>. This is a genuine cause of concern and hence cannot be ignored. How we handle this forms our next two lines of code.</p>

<p><code>file.write(chunk)</code> stores the data onto a buffer. It returns true if the write was performed and returns false if the write failed due to the buffer being full. So, we need to handle this by pausing the readStream if the buffer storage is full.</p>

<div>
  <pre><code class='javascript'>var bufferStore = file.write(chunk);
  if(bufferStore == false)
    request.pause();</code></pre>
</div>


<p>Also, we need to re-start streaming data from the read stream once the buffer is drained out. The following lines of code does just that.</p>

<div>
  <pre><code class='javascript'>file.on('drain', function() {
    request.resume();
  })</code></pre>
</div>


<p><strong>Pipes in node</strong>: Here, we have handled the logic of keeping the read &ndash; write rate to be in sync. Node.js provides us with pipes which has this logic already encapsulated in it.</p>

<p>The following line,</p>

<div>
  <pre><code class='javascript'>request.pipe(file) // The notion is quite similar to UNIX pipes. Pipes the input into an output stream.</code></pre>
</div>


<p>would be equivalent to</p>

<div>
  <pre><code class='javascript'>request.on('data', function(chunk) {
    var bufferStore = file.write(chunk);
    if(bufferStore == false)
      request.pause();
  })

  file.on('drain', function() {
    request.resume();
  })</code></pre>
</div>


<p>Pipe by itself maintains the read write rate to be in sync by pausing and resuming when necessary.</p>

<p>Now since we have handled our cause of concern, all that is left is to calculate the upload percentage upon receiving each chunk of data and respond back with the calculated percentage.</p>

<div>
  <pre><code class='javascript'>uploadedSize += chunk.length;
  uploadProgress = (uploadedSize/fileSize) * 100;
  response.write(Math.round(uploadProgress) + &quot;%&quot; + &quot; uploaded\n&quot; );</code></pre>
</div>


<p>Do note that the actual size of the upload file is calculated from the request headers.</p>

<div>
  <pre><code class='javascript'>var fileSize = request.headers['content-length'];</code></pre>
</div>


<p>Now, when the request ends ( i.e the &lsquo;end&rsquo; event is emitted by the request ), the final chunk of response is given back to the client indicating that our file upload has been done successfully.</p>

<p>To test this, run the node server and try making a request, something like this:</p>

<p><code>curl -v --upload-file "upload_file.csv" "http://localhost:8000"</code></p>

<p>and the upload progress could be tracked.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mercury: The WYSIWYG html editor]]></title>
    <link href="http://tech.sunilnkumar.com/2013/05/21/mercury-the-wysiwyg-html-editor"/>
    <updated>2013-05-21T00:53:48+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/05/21/mercury-the-wysiwyg-html-editor</id>
    <content type="html"><![CDATA[<p>I had this application where different users would want to edit custom html pages to be shown up in there web sites. Each user will have his own domain( all domains pointing to the same Rails application ) and the custom html page had to be loaded as per the current domain. To do this, in search of a WYSIWYG html editor which is easy to setup and simple to start off, I ended up in <a href="http://jejacks0n.github.io/mercury/">Mercury</a>. Whats really nice was that Mercury also had a <a href="https://github.com/balupton/mercury-rails">gem</a> to be used for Rails developer and as I am one, I had no more hesitation in get started with mercury.</p>

<p>To get started off with mercury, add</p>

<div>
  <pre><code class='ruby'>gem 'mercury-rails'</code></pre>
</div>


<p>to the Gemfile and bundle it.</p>

<p>Run the rails generator for the mercury files.</p>

<div>
  <pre><code class='ruby'>rails g mercury:install</code></pre>
</div>


<p>A couple of questions will be posted. Press &lsquo;yes&rsquo; to install the layout files.</p>

<p>Now checking out the directory structure,  you could see three additional files.</p>

<p><strong>mercury.js</strong> and<strong> mercury.css</strong> in the js and stylesheets assets respectively. Also, a new layout file for the mercury editor, <strong>mercury.html.erb </strong></p>

<p>I did remove the mercury css file later on.</p>

<p>One thing that needs to be noticed here is that the mercury.js file is heavy and it woudn&rsquo;t be a good idea to load it in all the pages. We would want to load it in only the pages that needs to be edited. Checkout the mercury layout file and you can see that the mercury.js file is included.</p>

<div>
  <pre><code class='ruby'>&lt;head&gt;
        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, maximum-scale=1.0, initial-scale=1.0&quot;&gt;
        &lt;%= csrf_meta_tags %&gt;
        &lt;title&gt;Mercury Editor&lt;/title&gt;
        &lt;%= stylesheet_link_tag 'mercury' %&gt;
        &lt;%= javascript_include_tag 'jquery-1.7', 'mercury' %&gt;
    &lt;/head&gt;</code></pre>
</div>


<p>Now to prevent mercury.js from being loaded up in the pages, we could move all the other js files in our application to a separete directory and then require the directory in our application.js</p>

<p>My application.js will have,</p>

<div>
  <pre><code class='ruby'>//= require_tree ./main</code></pre>
</div>


<p>where main is the directory which has all the application specific javascript. (Probably could be a better name :) )</p>

<p>Now peep into the routes file, you could see this extra line,</p>

<div>
  <pre><code class='ruby'>mount Mercury::Engine =&gt; '/'</code></pre>
</div>


<p>What this line does is that it allows the html pages in your application to be edited. An extra &lsquo;/editor&rsquo;  will have to be added at the beginning of each url path to load the mercury editor for the page.</p>

<p>Consider you have the url &lsquo;<strong>localhost:3000/pages</strong>&rsquo; , all you need to load it in the mercury layout is to change it to &lsquo;<strong>&#8216;localhost:3000/editor/pages</strong>&rsquo; . You have mercury loaded up to edit your page and can now see it in the mercury editor&rsquo;s layout.</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2013/05/screenshot.png"><img src="http://sunilkumarn.files.wordpress.com/2013/05/screenshot.png?w=570" alt="Screenshot" /></a></p>

<p>However this isn&rsquo;t just enough to start editing the page. You need to specify editable regions in the page.
In <code>pages.html.erb </code></p>

<div>
  <pre><code class='ruby'>&lt;div class=&quot;control-group&quot;&gt;
        &lt;h3 class=&quot;section_header page-header&quot;&gt;Pricing page&lt;/h3&gt;
        &lt;div id=&quot;faq&quot; class=&quot;mercury-region&quot; data-type=&quot;editable&quot; data-mercury=&quot;full&quot;&gt;
            &lt;%= render :file =&gt; file_path(@domain 'faq') %&gt;
        &lt;/div&gt;
    &lt;/div&gt;</code></pre>
</div>


<p>Consider this piece of code. A div with id=&ldquo;faq&rdquo; is made editable with<strong> class=&ldquo;mercury-region&rdquo; </strong>and attributes<strong> data-type=&ldquo;editable&rdquo; </strong>and<strong> data-mercury=&ldquo;full&rdquo;</strong>.</p>

<p>Now you can see the editable region.</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2013/05/screenshot-1.png"><img src="http://sunilkumarn.files.wordpress.com/2013/05/screenshot-1.png?w=570" alt="Screenshot-1" /></a></p>

<p>This following line in above piece of code</p>

<div>
  <pre><code class='ruby'>&lt;%= render :file =&gt; file_path(@domain, 'faq') %&gt;</code></pre>
</div>


<p>invokes a helper method and loads the already created sample faq template which can now be edited and saved for the particular domain. As simple as that.</p>

<p>Similarly you could edit more pages here. This is how the contacts page can be edited.</p>

<div>
  <pre><code class='ruby'>&lt;div class=&quot;control-group&quot;&gt;
        &lt;h3 class=&quot;section_header page-header&quot;&gt;Contact page&lt;/h3&gt;
        &lt;div id=&quot;contact&quot; class=&quot;mercury-region&quot; data-type=&quot;editable&quot; data-mercury=&quot;full&quot;&gt;
            &lt;%= render :file =&gt; file_path(@domain, 'contact') %&gt;
        &lt;/div&gt;
    &lt;/div&gt;</code></pre>
</div>


<p>Also, you probably might want to change the save url of the mercury editor for the particular page. That is the controller action to which the mercury edited contents will be &lsquo;POST&rsquo; or &lsquo;PUT&rsquo; (depends on the configuration set in the mercury.html.erb)</p>

<p>To change the mercury save url for this particular page, I wrote the script in the erb file ( pages.html.erb )</p>

<div>
  <pre><code class='ruby'>&lt;script&gt;
        $(window).on('mercury:ready', function () {
            Mercury.saveUrl = &quot;&lt;%= pages_upload_admin_domain_path(@domain) %&gt;&quot;;
        });
    &lt;/script&gt;</code></pre>
</div>


<p>You might also want to change the page thats to be redirected to once we are done with editing using mercury. We could bind on mercury&rsquo;s save event to get this done.</p>

<div>
  <pre><code class='ruby'>$(window).bind('mercury:saved', function() {
        $(window.location.replace('/admin/domain'));
    });</code></pre>
</div>


<p>All this saved data would have to be dealt with in the controller action. Inspecting the params in the controller action ( the mercury Save url) ,</p>

<pre><code>&lt;code&gt;{"content"=&gt;
    {"faq"=&gt;
        {"type"=&gt;"full",
         "data"=&gt;{},
         "value"=&gt; "&lt;h1&gt;This is where I have done my FAQ editing&lt;/h1&gt;"
         "snippets" =&gt; {}
        }     
    },

    {"contact"=&gt;
        {"type"=&gt;"full",
         "data"=&gt;{},
         "value"=&gt; "&lt;h1&gt;This is where I have done my Contacts editing&lt;/h1&gt;"
         "snippets" =&gt; {}
        }
    }
}

&lt;/code&gt;
</code></pre>

<p>There are two things of notice here. The contents hash contains all the mercury related stuff.  Each hash in the contents hash has a key which is equal to the id of the mercury editable html divisions ( see the view code pasted above ), here &lsquo;<strong>faq</strong>&rsquo; and &lsquo;<strong>contact</strong>&rsquo;. The actual edited html content can be found in the hash with key &lsquo;value&rsquo; ( <strong><h1>This is where I have done my Contacts editing</h1></strong>).  &#8217;The controller action could decide on how to save this html content.</p>

<p><em>What have I done to solve my case mentioned at the starting?</em></p>

<p><em><em>I created a pages directory in my public. Within the pages directory I created sub directories which corresponds to the domain. </em><strong>For eg, the domain localhost corresponds to the directory named localhost inside the public/pages directory and the domain remotehost corresponds to the remotehost directory</strong></em>.</p>

<p>I then saved all these edited html content as html files within these domain specific directories. When a particular domain was loaded, the html pages ( for eg, faq and contact) was rendered from the corresponding domain directories in the public folder .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Delayed Jobs in Rails: Adding custom attributes]]></title>
    <link href="http://tech.sunilnkumar.com/2013/05/19/delayed-jobs-in-rails-adding-custom-attributes"/>
    <updated>2013-05-19T11:48:38+05:30</updated>
    <id>http://tech.sunilnkumar.com/2013/05/19/delayed-jobs-in-rails-adding-custom-attributes</id>
    <content type="html"><![CDATA[<p>Ok, so this was my exact scenario. When I was doing a bulk emailing application,  there was the need for the client to upload his set of email ids as a file and then save it to the database. The process of saving these contact mail_ids for a particular mail group was a delayed process, handled by<a href="https://github.com/collectiveidea/delayed_job"> Rails delayed job</a> . <a href="https://github.com/collectiveidea/delayed_job">
</a></p>

<div>
  <pre><code class='ruby'>@mail_group.delay.save_group_contacts</code></pre>
</div>


<p>where @mail_group is the active record group to which the mails_ids being uploaded and saved belong.</p>

<p>The requirement was to show a progress bar for the process of the mail_ids being saved to the the mail group. To handle this, I decided to add custom attributes to the delayed jobs table so as to identify the owner of the delayed job and also find the progress of the job.</p>

<p>To do this,</p>

<p>1) DB migration to add the custom attributes</p>

<div>
  <pre><code class='ruby'>class AddColumnToDelayedJob &lt; ActiveRecord::Migration
      def change
        add_column :delayed_jobs, :job_process_status, :integer, :default =&gt; 0
        add_column :delayed_jobs, :job_owner_id, :integer
        add_column :delayed_jobs, :job_owner_type, :string
      end
    end</code></pre>
</div>


<p>2) A model for the delayed jobs table.</p>

<div>
  <pre><code class='ruby'>module Delayed
      class Job &lt; ActiveRecord::Base
        self.table_name = &quot;delayed_jobs&quot;
        attr_accessible :job_owner_id, :job_process_status, :job_owner_type
        belongs_to :job_owner, :polymorphic =&gt; true
      end
    end</code></pre>
</div>


<p>As seen, three extra attributes (job_owner_id, job_owner_type attributes for establishing a polymorphic association with the job owner of the delayed job and a job_process_status attribute for updating the progress of the job) were added to the delayed jobs table.</p>

<p>Delayed jobs were then created with the job_owner_id and job_owner_type.</p>

<div>
  <pre><code class='ruby'>@mail_group.delay(job_owner_id: @mail_group.id, job_owner_type: @mail_group.class.name).save_group_contacts</code></pre>
</div>


<p>However this would not be enough to update the custom attributes. An attempt to create a delayed job would produce this</p>

<div>
  <pre><code class='ruby'>ActiveModel::MassAssignmentSecurity::Error:
        Can't mass-assign protected attributes: job_owner_id, job_owner_type</code></pre>
</div>


<p>As a quick fix, add a <code>config/initializers/delayed_job.rb</code>
and paste in the following code</p>

<div>
  <pre><code class='ruby'>class Delayed::Job &lt; ActiveRecord::Base
      self.attr_protected if self.to_s == 'Delayed::Backend::ActiveRecord::Job'   #loads protected attributes for                                                                                        # ActiveRecord instance
    end</code></pre>
</div>


<p>Now the delayed job would get saved with the job_owner_id and job_owner_type.</p>

<p>Also, in the mail_group model, set an association to the delayed jobs table.</p>

<div>
  <pre><code class='ruby'>class MailGroup &lt; ActiveRecord::Base
      has_many :deferred_jobs, :as =&gt; :job_owner, :class_name =&gt; &quot;::Delayed::Job&quot;
    end</code></pre>
</div>


<p>Now you can access all the delayed jobs of a particular @mail_group as</p>

<div>
  <pre><code class='ruby'>@mail_group.deferred_jobs</code></pre>
</div>


<p>The job process status which is updated by the running job can also be accessed as</p>

<div>
  <pre><code class='ruby'>@mail_group.deferred_jobs.job_process_status</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Reset, Revert, Merge Conflicts and the Faulty Merge]]></title>
    <link href="http://tech.sunilnkumar.com/2011/12/18/git-a-brief-on-reverts-resets-merges-and-conflicts"/>
    <updated>2011-12-18T14:13:37+05:30</updated>
    <id>http://tech.sunilnkumar.com/2011/12/18/git-a-brief-on-reverts-resets-merges-and-conflicts</id>
    <content type="html"><![CDATA[<p style="text-align: left;">As a developer, I find <a title="Git" href="http://git-scm.com/" target="_blank">Git</a> both powerful and amazing. It tracks changes to source code and enables collaboration between developers. This post shows you how to easily fix wrong commits that are commonly made in development.</p>


<h1><strong><span style="color: #000000;">Remove uncommitted changes</span></strong></h1>


<p>To reset changes in all files which are staged(currently in your index) which are modified but not yet staged:</p>


<pre style="text-align: left;" class="prettyprint"><span class="pln">$ git reset </span><span class="pun">--</span><span class="pln">hard HEAD</span></pre>


<h1 style="text-align: left;"><span style="color: #000000;"><strong>Remove most recent unpublished commits</strong></span></h1>


<p style="text-align: left;">Let’s assume that your commit history is like this, with A being the latest commit in HEAD:</p>


<pre style="text-align: left;" class="prettyprint"><span style="color: #000000;"><strong><span class="pln">o </span><span class="pun">-&gt;</span><span class="pln"> o </span><span class="pun">-&gt;</span><span class="pln"> o </span><span class="pun">-&gt;</span><span class="pln"> D </span><span class="pun">-&gt;</span><span class="pln"> C </span><span class="pun">-&gt;</span><span class="pln"> B </span><span class="pun">-&gt;</span><span class="pln"> A</span></strong></span></pre>


<p style="text-align: left;">You&nbsp; have already committed your changes A, B, C and D and these changes have not been shared or published with any upstream repositories. You would like to get rid of the recent three commits.</p>


<pre style="text-align: left;" class="prettyprint"><span class="pln">$ git reset </span><span class="pun">--</span><span class="pln">hard HEAD</span><span class="pun">~</span><span class="lit">3</span></pre>


<div style="text-align: left;">Now your history would look like:</div>


<pre style="text-align: left;" class="prettyprint"><span style="color: #000000;"><strong><span class="pln">o </span><span class="pun">-&gt;</span><span class="pln"> o </span><span class="pun">-&gt;</span><span class="pln"> o </span><span class="pun">-&gt;</span><span class="pln"> D</span></strong></span></pre>


<p style="text-align: left;">The changes in commits A through C are now irretrievable. But what if you needed to remove an existing commit from somewhere in between HEAD and the beginning of history or a commit which has been shared upstream ?</p>


<h1 style="text-align: left;"><strong><span style="color: #000000;">Remove an existing published commit</span></strong></h1>


<p style="text-align: left;">Again, let’s assume your commit history looks like this:</p>


<pre style="text-align: left;" class="prettyprint"><span style="color: #000000;"><strong><span class="pln">o </span><span class="pun">-&gt;</span></strong></span><strong><span style="color: #000000;"><span class="pln"> o </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> o </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> D </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> C </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> B </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> A</span></span></strong></pre>


<p style="text-align: left;">Say you want to remove the change introduced by the commit C which has the ID <em>750ccd</em> which is also the third last commit:</p>


<pre style="text-align: left;" class="prettyprint"><span class="com"># Reference commit by ID</span><span class="pln"><br>$ git revert </span><span class="lit">750ccd</span><span class="pln"><br><br></span><span class="com"># Reference commit by position from most recent commit in HEAD</span><span class="pln"><br>$ git revert HEAD</span><span class="pun">~</span><span class="lit">2</span></pre>


<div style="text-align: left;">This introduces a new commit which reverses the changes introduced by commit C. You will be given a chance to enter a new commit message, but the default message that indicates its ‘the revert of the commit C’ is self explanatory.</div>


<div style="text-align: left;"></div>


<div style="text-align: left;">Now your history would look like,</div>


<pre style="text-align: left;" class="prettyprint"><span style="color: #000000;"><strong><span class="pln"> o </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> o </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> o </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> D </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> C </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> B </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> A </span><span class="pun">-</span><a href="http://piratepad.net/ep/search?query=%3E"><span style="color: #000000;"><span class="pun">&gt;</span></span></a><span class="pln"> rC </span><strong><strong><span class="pln"> </span><span class="com"># rC : reverted commit C </span></strong></strong></strong></span></pre>


<div style="text-align: left;">
<blockquote><p>The revert commit only removes the data.</p></blockquote>
<h1><span style="color: #000000;"><strong>Reverting A Faulty Merge</strong></span></h1>
<p>Now let me talk about the incident that had happened to my colleague while at work.</p>
</div>


<pre style="text-align: left;" class="prettyprint"><span class="pln">$ git pull origin experimental</span></pre>


<p style="text-align: left;">My friend did this while HEAD is still in master branch resulting in a faulty merge. The experimental branch has now been merged into the branch master. The merge was unintentional. There were no merge conflicts at this point. The mainline code broke. We had to revert this faulty merge.</p>


<div style="text-align: left;"><a href="http://42.mobme.in/?attachment_id=694" rel="attachment wp-att-694"><img class="alignnone size-medium wp-image-694 hoverZoomLink" src="http://42.mobme.in/wp-content/uploads/2011/12/faulty-merge-0-163x300.png" alt="" width="163" height="300"></a></div>


<div style="text-align: left;"></div>


<p style="text-align: left;">This would give you a picture. P is the point of branching. x is some&nbsp; commit made in the mainline branch totally unrelated to the side line branch. The side line branch itself has got two commits of its own, A&nbsp; and B. M is the merge commit (experimental has been merged with master).&nbsp; The code broke. Hence, we need to revert M(the merge commit).</p>


<p><a href="http://42.mobme.in/?attachment_id=695" rel="attachment wp-att-695"><img class="alignnone size-medium wp-image-695 hoverZoomLink" src="http://42.mobme.in/wp-content/uploads/2011/12/faulty-merge-1-163x300.png" alt="" width="163" height="300"></a></p>


<div style="text-align: left;">Now as seen, the merge has been reverted(W is the reverse of M). This was done with</div>


<pre style="text-align: left;" class="prettyprint"><span class="pln">$ git revert </span><span class="pun">-</span><span class="pln">m </span><span class="lit">1</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Commit</span><span class="pln"> id of M</span><span class="pun">)</span></pre>


<div style="text-align: left;">This adds W to the commit log as well. Now the faulty code in the&nbsp; experimental branch was worked upon and fixed and its been made ready&nbsp; for the merge (again!). The experimental branch is now merged with the&nbsp; master branch. What was weird(for us, at that point of time) and&nbsp; noticeable was that the code changes that were made after the ‘merge&nbsp; revert’ appeared in the master branch whereas the ones made before the&nbsp;revert didn’t appear.</div>


<div style="text-align: left;"><a href="http://42.mobme.in/?attachment_id=696" rel="attachment wp-att-696"><img class="alignnone size-medium wp-image-696 hoverZoomLink" src="http://42.mobme.in/wp-content/uploads/2011/12/faulty-merge-2-163x300.png" alt="" width="163" height="300"></a></div>


<p style="text-align: left;">Again, x are the commits unrelated to the experimental branch. M2 is&nbsp; the second merge. Commits in the experimental branch,C and D, fixes the&nbsp; faulty code in A and B. Whats to be noticed is that, after the updated&nbsp; experimental branch has been merged, none of the changes made by A and B&nbsp; would appear in the master branch, whereas the changes made in C and D&nbsp; would.The reason was found out soon.</p>


<div style="text-align: left;"></div>


<div style="text-align: left;">Linus Torvalds explains the situation:</div>


<p style="text-align: justify; padding-left: 30px;"><em>Reverting a regular commit just effectively undoes what that commit did, and is fairly straightforward. But reverting a merge commit also undoes the _data_ that the commit changed, but it does absolutely nothing to the effects on _history_ that the merge had. So the merge will still exist, and it will still be seen as joining the two branches together, and future merges will see that merge as the last shared state – and the revert that reverted the merge brought in will not affect that at all.</em></p>


<p style="text-align: left;">Thats what just happened here. W(merge revert) undoes the data made by M(merge) but does nothing to the commit history brought in by M. There fore when the second merge, M2, is made, the commit history is checked and M is found to be ‘last shared state’. Hence, only those changes that were made after the ‘last shared state’, M, will be merged into the master branch now(i.e. commits C and D). None of the data created in A&nbsp; and B would merge, because as per the commit history, they are already&nbsp; merged.</p>


<p style="text-align: left;">Solution to this problem is also explained by Linus himself. The fix is to ‘<strong>revert the revert that brought in W</strong>‘, i.e, revert W before you do in the next merge,M2.</p>


<div style="text-align: left;">Thus the main line commit log would be</div>


<pre style="text-align: left;" class="prettyprint"><strong><span style="color: #000000;"><span class="pln">P </span><span class="pun">-&gt;</span><span class="pln"> x </span><span class="pun">-&gt;</span><span class="pln"> M </span><span class="pun">-&gt;</span><span class="pln"> W </span><span class="pun">-&gt;</span><span class="pln"> x </span><span class="pun">-&gt;</span><span class="pln"> x </span><span class="pun">-&gt;</span><span class="pln"> Y </span><span class="pun">-&gt;</span><span class="pln"> M</span><span class="str">' </span></span></strong></pre>


<div style="text-align: left;">where Y is the reverse of W and M2 is the merge made after that.</div>


<div style="text-align: left;"></div>


<pre style="text-align: left;" class="prettyprint"><span class="pln">$ git revert </span><span class="pun">(</span><span class="pln">commit id of W</span><span class="pun">)</span></pre>


<div style="text-align: left;">adds Y to the commit log. The above commit log would be equivalent to</div>


<pre style="text-align: left;" class="prettyprint"><strong><span style="color: #000000;"><span class="pln">P </span><span class="pun">-&gt;</span><span class="pln"> x </span><span class="pun">-&gt;</span><span class="pln"> M </span><span class="pun">-&gt;</span><span class="pln"> x </span><span class="pun">-&gt;</span><span class="pln"> x </span><span class="pun">-&gt;</span><span class="pln"> M</span><span class="str">'</span></span></strong></pre>


<div style="text-align: left;">where there is no W nor a Y and then the second merge has been&nbsp; performed, M2. Now this would be fine, and all the changes made in the&nbsp; experimental branch should be seen in the master branch(ignoring merge&nbsp; conflicts). If there are any merge conflicts arising, git leaves the&nbsp; index and the working tree in a special state that gives us all the&nbsp; information needed to resolve the merge.</div>


<p><span style="color: #000000;"><strong>Resolving a Merge Conflict</strong></span></p>


<p>A <strong>Merge conflict</strong> would throw in the following message:</p>


<p><strong><code>CONFLICT (content): Merge conflict in sample_script.rb Automatic merge failed; fix conflicts and then commit the result</code></strong></p>


<div style="text-align: left;">Trying to switch to the experimental branch would give you this</div>


<p><strong><code>error: you need to resolve your current index first</code></strong></p>


<div style="text-align: left;">The files with conflicts will have markers upon them.</div>


<p style="text-align: left;"><strong><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:sample_script.rb<br>
"We would be&nbsp; starting off now"<br>
=======<br>
"This would be the end"<br>
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&nbsp; d31f96832d54c2702914d4f605c1d641511fef13:sample_script.rb</code></strong></p>


<div style="text-align: left;">Now we need to resolve these conflicts manually followed by adding the file and commit it.</div>


<pre style="text-align: left;" class="prettyprint"><span class="pln">$ git add sample_script</span><span class="pun">.</span><span class="pln">rb<br>$ git commit </span><span class="pun">-</span><span class="pln">a</span></pre>


<div style="text-align: left;">The commit message would already be filled in indicating that its a&nbsp; conflict resolving commit. I always prefer not to add in anything extra&nbsp; on that.</div>


<div style="text-align: left;"></div>


<div style="text-align: left;"><strong>gitk</strong></div>


<div style="text-align: left;"></div>


<p style="text-align: left;"><strong></strong>It would also be helpful to have the ‘gitk’ tool when you are&nbsp; analyzing your commit logs, specially when you have more than once&nbsp; branch. You would be given a neat graphical representation of your&nbsp; working directory.</p>


<pre style="text-align: left;" class="prettyprint"><span class="pln">$ sudo apt</span><span class="pun">-</span><span class="pln">get install gitk</span></pre>


<div style="text-align: left;">if you already don’t have one.</div>


<div style="text-align: left;"></div>


<div style="text-align: left;"><a href="http://42.mobme.in/?attachment_id=519" rel="attachment wp-att-519"><img class="alignnone size-full wp-image-519" src="http://42.mobme.in/wp-content/uploads/2011/12/gitk.png" alt="" width="442" height="324"></a></div>


<div style="text-align: left;"></div>


<div style="text-align: left;">This definitely would help in getting a better picture.</div>


<div style="text-align: left;"></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solution to 'Wireless disabled by Hardware switch']]></title>
    <link href="http://tech.sunilnkumar.com/2011/07/12/solution-to-wireless-disabled-by-hardware-switch"/>
    <updated>2011-07-12T19:05:52+05:30</updated>
    <id>http://tech.sunilnkumar.com/2011/07/12/solution-to-wireless-disabled-by-hardware-switch</id>
    <content type="html"><![CDATA[<p>Ohhh &hellip; Suddenly my wifi goes off( a combination of DELL with Ubuntu natty) and got a display &ndash; <strong>wireless disabled by hardware switch</strong>. Got down to googling and finally got this.</p>

<p>To get back your wifi to start working, type in the following:</p>

<p><strong>$:  sudo rfkill list</strong></p>

<p>You will get back something like this.</p>

<p><strong>0: dell-wifi: Wireless LAN</strong>
<strong>    Soft blocked: yes</strong>
<strong>    Hard blocked: no</strong>
<strong>1: dell-bluetooth: Bluetooth</strong>
<strong>    Soft blocked: no</strong>
<strong>    Hard blocked: no</strong>
<strong>2: phy0: Wireless LAN</strong>
<strong>    Soft blocked: yes</strong>
<strong>    Hard blocked: no</strong>
<strong>4: hci0: Bluetooth</strong>
<strong>    Soft blocked: no</strong>
<strong>    Hard blocked: no</strong></p>

<p>As you could see (0,2) the Wireless Lan has been soft blocked.  We need to unblock it to get it up and working properly.</p>

<p><strong>$: sudo rfkill unblock 0</strong></p>

<p><strong>$: sudo rfkill unblock 2</strong></p>

<p>Restart your networking</p>

<p><strong>$: sudo /etc/init.d/networking restart</strong></p>

<p>and yup! the wifi should be back now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyconfIndia 2011]]></title>
    <link href="http://tech.sunilnkumar.com/2011/07/04/ruby-conf-india-2011"/>
    <updated>2011-07-04T23:48:37+05:30</updated>
    <id>http://tech.sunilnkumar.com/2011/07/04/ruby-conf-india-2011</id>
    <content type="html"><![CDATA[<p>May 27,28 &ndash; Attended Rubyconf India 2011 held at Royal Orchid hotel, Bangalore.&lsquo;  For some one who has less than a year of hands on with ruby, it was great hearing from the giants &ndash; the very Matz himself expressed his love for the community(in his own peculiar Japaneese way), Ola bini, Chad Fowler,  Brian and others. What in short ? &ndash; awesome 2 days.</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2011/07/255789_178700702184127_100001325964091_432000_4010094_n.jpg"><img src="http://sunilkumarn.files.wordpress.com/2011/07/255789_178700702184127_100001325964091_432000_4010094_n.jpg" alt="" /></a></p>

<p><a href="http://sunilkumarn.files.wordpress.com/2011/07/254387_178700228850841_100001325964091_431985_2535899_n1.jpg"><img src="http://sunilkumarn.files.wordpress.com/2011/07/254387_178700228850841_100001325964091_431985_2535899_n1.jpg" alt="" /></a></p>

<p><a href="http://sunilkumarn.files.wordpress.com/2011/07/254387_178700228850841_100001325964091_431985_2535899_n1.jpg">
</a></p>

<p><a href="http://sunilkumarn.files.wordpress.com/2011/07/254387_178700232184174_100001325964091_431986_2209738_n.jpg">
</a><a href="http://sunilkumarn.files.wordpress.com/2011/07/254387_178700232184174_100001325964091_431986_2209738_n.jpg"><img src="http://sunilkumarn.files.wordpress.com/2011/07/254387_178700232184174_100001325964091_431986_2209738_n.jpg" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Module functions as class and instance methods]]></title>
    <link href="http://tech.sunilnkumar.com/2011/07/04/module-functions-as-class-and-instance-methods"/>
    <updated>2011-07-04T10:50:51+05:30</updated>
    <id>http://tech.sunilnkumar.com/2011/07/04/module-functions-as-class-and-instance-methods</id>
    <content type="html"><![CDATA[<p>Consider you have a module and a class.</p>

<p>module Mymod and a class Myclass.</p>

<p>The situation in hand is such that certain functions in the module need to end up being instance methods of the class Myclass and certain functions need to be Class methods.  You could very well imagine of such situations. Consider you are using ActiveRecord and have a sub class <strong>Subscription</strong> in correspondence with a DB table. You want to insert logic, within the module, that would work in each of the following case.</p>

<p>1) When a subscription fails or succeeds.</p>

<p>2) When an unsubscription fails or succeeds</p>

<p>You do this.</p>

<p><em>module SubscriptionLogic</em></p>

<p><em>   def  after_sub</em></p>

<p><em>      &hellip;.</em></p>

<p><em>   end</em></p>

<p><em>   def  after_unsub</em></p>

<p><em>     &hellip;.</em></p>

<p><em>   end</em></p>

<p><em>   def  after_sub_fail</em></p>

<p><em>     &hellip;.</em></p>

<p><em>   end</em></p>

<p><em>   def  after_unsub_fail</em></p>

<p><em>      &hellip;.</em></p>

<p><em>    end</em></p>

<p><em>end</em></p>

<p><em>class Subscription</em></p>

<p><em>   include SubscriptionLogic</em></p>

<p><em>   &hellip;..</em></p>

<p><em>end</em></p>

<p>You insert the logic as functions of a module, say <strong>SubscriptionLogic</strong>. Ideally you want the methods containing the logic to be instance methods of the class Subscription. You include the module SubscriptionLogic in the class and you avail all the functions in the module as Instance methods. Now you consider the case when an unsubscription fails &ndash; i.e, there is no existing subscription so that an unsub could take place.  No way is it possible that you could have a function &lsquo;logic_after_unsub_fail&#8217;  in the module SubscriptionLogic and use it as an instance method, <em><strong>simply because there is no instance available</strong></em>.  You think and decide to use the function as your class method, but you have &rsquo;<strong>include</strong>d&#8217;  the  module in your class and hence its not possible to use it as your class method. You cannot <strong>extend</strong> the entire module coz , ideally you want the logic to be instance methods.</p>

<p>So you could get this solved up by a simple piece of extra coding.</p>

<p>_module SubscriptionLogic _</p>

<p><em>  def  after_sub</em></p>

<p><em>      &hellip;.</em></p>

<p><em>  end</em></p>

<p><em>  def  after_unsub</em></p>

<p><em>      &hellip;.</em></p>

<p><em>  end</em></p>

<p><em>  def  after_sub_fail</em></p>

<p><em>      &hellip;.</em></p>

<p><em>  end</em></p>

<p><em>  module ClassMethods</em></p>

<p><em>      def after_unsub_fail</em></p>

<p><em>           &hellip;.</em></p>

<p><em>      end</em></p>

<p><em>      def self.included(base)</em></p>

<p>_          base.extend(ClassMethods)    # base pertains to the class within which you include the module. _</p>

<p><em>      end</em></p>

<p><em>   end</em></p>

<p><em>end</em></p>

<p>Now within the class insert this line.</p>

<p>_class Subscription _</p>

<p>_   include SubscriptionLogic _</p>

<p><strong><em>   extend SubscriptionLogic::ClassMethods</em></strong></p>

<p><em>   &hellip;..</em></p>

<p><em>end</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Back after a Long Gap...]]></title>
    <link href="http://tech.sunilnkumar.com/2011/07/03/back-after-a-long-gap"/>
    <updated>2011-07-03T15:26:25+05:30</updated>
    <id>http://tech.sunilnkumar.com/2011/07/03/back-after-a-long-gap</id>
    <content type="html"><![CDATA[<p>Haven&rsquo;t Written any thing for  quite some time now. It was last november that i actually sat down to write something. Started off my professional career then and obviously was busy with work and stuff. Need to get back to writing stuff, little and bigger stuffs that i have learnt while working. In between i have fallen in love with a a new language &ndash; Ruby, the popular choice for web apps these days.  From a person who never had any kind of fondness for OOP, i have started loving to talk about about objects and classes. Learnt the difference between fun coding and professional coding. These 6-8 months has really been a learning curve for me and i really do hope that my following posts would reflect that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting started with PHP and apache]]></title>
    <link href="http://tech.sunilnkumar.com/2010/11/27/getting-started-with-php-and-apache"/>
    <updated>2010-11-27T14:44:10+05:30</updated>
    <id>http://tech.sunilnkumar.com/2010/11/27/getting-started-with-php-and-apache</id>
    <content type="html"><![CDATA[<p>Someone who gives it a thought of using PHP , apache and stuff for the first time will be faced up with a few number of fixed problems . Configuring your apache server , establishing a connection between PHP and apache , stuffs like that . Here is a basic introduction to start using these things and kick off as a web programmer .</p>

<p>Obviously you need to have PHP and apache installed on your system .</p>

<p><strong>$ : sudo apt-get install apache2</strong></p>

<p><strong>$ : sudo apt-get install php5-cli</strong></p>

<p><strong>$: sudo apt-get install libapache2-mod-php5</strong></p>

<p>would get you apache and PHP installed on your system  .</p>

<p>Using the appropriate versions is left upto individuals .</p>

<p>Just have a peep into some of the files like :</p>

<p><em>/etc/php5/apache2/php.ini</em> &mdash;&mdash;&ndash;> You would see a lot of variables set to &lsquo;ON&rsquo;  and &lsquo;OFF&rsquo; . You may well have to toggle those values as and when necessary .</p>

<p>Try starting , stopping and restarting your apache web server .</p>

<p><strong>$ :sudo  /etc/init.d/apache2 start</strong></p>

<p><strong>$: sudo /etc/init.d/apache2 stop</strong></p>

<p><strong>$: sudo /etc/init.d/apache2  restart</strong></p>

<p>Once everything is fine and and perfect  , try out your first PHP script . Script it , save it in a file with a &lsquo;.php&rsquo; extension and put your file in the directory &lsquo;/var/www &rsquo;. Now you could access this script from your browser</p>

<p><strong>localhost/&lsquo;scriptname&rsquo;</strong></p>

<p>and you see the result right there in front of you . Thats just how you enter the world of web programming .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GreaseMonkey : Customizing your webpages ]]></title>
    <link href="http://tech.sunilnkumar.com/2010/11/24/greasemonkey-customizing-your-webpages"/>
    <updated>2010-11-24T22:04:29+05:30</updated>
    <id>http://tech.sunilnkumar.com/2010/11/24/greasemonkey-customizing-your-webpages</id>
    <content type="html"><![CDATA[<p>There would have been times when you would have felt if the web page in front of you behaved a bit more according to your like . This might specially happen if the page consists of forms that you fill with data directed to live servers .  In such cases you wouldn&rsquo;t mind customizing the page to suit your needs so that you don&rsquo;t do some nonsense that would result in chaos .</p>

<p>Firefox , i see many using it as their default browser , offers a plugin called &lsquo;<strong>Grease monkey</strong>&#8216;  that allows you to do just that . All you need to is to install the plugin , write your own javascripts , install them ( thats pretty easy to do ) and start using them  .</p>

<p>Write your javascripts to customize your webpage . What you need to do in addition is to add some <strong>metadata</strong> providing extra information to greasemonkey .</p>

<p>The meta data might look as follows :</p>

<p><a href="http://sunilkumarn.files.wordpress.com/2010/11/untitled-1.png"><img src="http://sunilkumarn.files.wordpress.com/2010/11/untitled-1.png?w=300" alt="" /></a></p>

<p>The first and the last lines are necessary to indicate to the greasemonkey that the script it to be processed by it .</p>

<p>The <strong>name and the description are optional</strong> . It might prove helpful to you if you have scripted and installed a number of greasemonkey scripts .</p>

<p>The 4th an the 5th line of the metadata are extremely important and needs to be well understood . <strong>These lines tell the greasemonkey the URLs on which the script is to be applied and not to be applied </strong>.</p>

<p><strong>@include</strong> &ndash;> specifies the URLs on which the script is to be installed . Here &lsquo;*&rsquo; is specified which is just a wildcard and indicates that the script is to applied on all the sites  .</p>

<p><strong>@exclude</strong> &ndash;> specifies the URLs that are to be left out . It is to be noted that @exclude is processed before @include .</p>

<p>This gives you an idea of the metadata part of the script . Now you may write your own javascript , add your metadata at the beginning and save the file with the extension &lsquo; <strong>.user.js </strong>&#8216;  .</p>

<p>To install the script , open the file in firefox and you would see an option &lsquo;install&rsquo; . Just give a click and you are ready to use your greasemonkey script .You could manage your script , disable it , uninstall it as well . Just click</p>

<p><em>Tools &mdash;&mdash;> Greasemonkey &mdash;&mdash;> Manage user scripts &hellip;.</em></p>

<p>Having another plugin &lsquo;<strong>firebug&rsquo;</strong> may help you in the process of writing the script . This allows you to view the html code of the webpage that is infront of you . Infact the plugin is almost a necessity to help you write efficient code with greasemonkey .</p>

<p>Now you may start writing your own greasemonkey scripts and customize any of the webpages as and according to your like . It&rsquo;s also to be understood that greasemonkey is a plugin of firefox . If you use Google chrome as your browser , you wouldn&rsquo;t need to install any plugin . The facility to customize the webpage is provided by default . You may use the same code that you have written to work with greasemonkey . The metadata and the process of installing is the same and obviously the results are the same as well .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Screens]]></title>
    <link href="http://tech.sunilnkumar.com/2010/11/24/using-screens"/>
    <updated>2010-11-24T20:43:00+05:30</updated>
    <id>http://tech.sunilnkumar.com/2010/11/24/using-screens</id>
    <content type="html"><![CDATA[<p>You might have often had the experience where you would have had to open quite a few terminals on your screen simultaneously . This might often be the case when you are doing stuffs like data processing on particular files and you intend not to sit idle during that particular time . What you do is to keep unnecessary number of terminals open on your screen .</p>

<p>You could get rid of this by using the &lsquo;screens&rsquo; option in Linux . This allows you to enter a new screen where you could perform time consuming processes like a data processing operation using the  &lsquo;awk&#8217;  command . Start the process in the screen , exit the screen and now do your own stuff in the main console , go back to your screen after a while and view the results of  whatever operations you had performed . You could do all this stuff without the necessity of opening terminals again and again .</p>

<p>Create a new Screen :</p>

<p><strong>$ : screen -S &lsquo;Screen name&rsquo; </strong></p>

<p>To detach from the current screen :</p>

<p>Use<strong> CTRL + a + d</strong></p>

<p>To terminate a screen :</p>

<p>Use <strong>CTRL + d</strong></p>

<p>To attach an already created screen :</p>

<p><strong>$ : screen -x &lsquo;screen name&rsquo;</strong></p>

<p>You could keep on creating screens within screens and keep going on as and when needed  .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Semaphores and Synchronization Patterns]]></title>
    <link href="http://tech.sunilnkumar.com/2010/10/26/semaphores-and-synchronization-patterns"/>
    <updated>2010-10-26T09:20:46+05:30</updated>
    <id>http://tech.sunilnkumar.com/2010/10/26/semaphores-and-synchronization-patterns</id>
    <content type="html"><![CDATA[<p>Semaphores as we know is a mechanism that is used to solve the issue of synchronization . The concept and use of semaphores is a bit more than what you normally call &lsquo; tricky &rsquo; .Here we try and analyze a basic synchronization pattern and solve the issue with semaphores  .</p>

<p>Have a look into the pattern given below .</p>

<p>statements in THREAD A</p>

<p>strcpy(a , &ldquo;Hello &rdquo;);   -  A1
printf(&ldquo;%s\n&rdquo; ,b);      -    B2</p>

<p>statements in THREAD B</p>

<p>strcpy(b , &ldquo;World&rdquo;)  &ndash; B1
printf(&ldquo;%s\n&rdquo; ,a);    -  A2</p>

<p>Here we have two threads which consists of two statements each .
<strong>Constraint :</strong>
What we need to ensure is that the statements suffixed A1 &amp; B1 are executed before the statements suffixed A2 &amp; B2  execute. Here the two threads &lsquo;rendezvous &rsquo; at a point of execution and is not allowed to proceed until both have arrived .</p>

<p>Without using a mechanism like semaphore , no way is it possible to ensure such a constraint due to the scheduling mechanism that cannot be predicted . Hence we use semaphores to solve this issue .</p>

<p>To ensure that it works according to wish  , we do this  :</p>

<p>THREAD A</p>

<p>strcpy(a , &ldquo;Hello &rdquo;);  &ndash; A1
up(sem1);
down(sem2);
printf(&ldquo;%s\n&rdquo; ,b);   &ndash; B2</p>

<p>THREAD B</p>

<p>strcpy(b , &ldquo;World&rdquo;);  &ndash; B1
up(sem2);
down(sem1);
printf(&ldquo;%s\n&rdquo; ,a);   &ndash; A1</p>

<p>Now we need to give a thought on how this works .
Here we have two semaphores ,sem1 and sem2 as we have two critical sections</p>

<p>Now , how is the synchronization issue solved  .?
The &lsquo;<strong>down</strong> &rsquo; operation just before the two statements suffixed &lsquo;2&rsquo; ensures that the two statements are not executed until the &lsquo;<strong>up&rsquo;</strong> operation on the corresponding semaphore is not invoked . Hence whichever be the order of scheduling , both the threads rendezvous at a point  and will not proceed ( as a result of the &lsquo;down&rsquo; operation  )until the next thread arrives (and the corresponding &lsquo;up&rsquo; operation is performed ).</p>

<p>This synchronization pattern as been solved using semaphores .</p>

<p>You could find the solution to these and more such patterns from <a href="http://github.com/sunilkumarn/Synchroniation_patterns">here</a> .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Memcheck : A Memory Error Detection Tool]]></title>
    <link href="http://tech.sunilnkumar.com/2010/10/21/memcheck-a-memory-error-detection-tool"/>
    <updated>2010-10-21T09:13:49+05:30</updated>
    <id>http://tech.sunilnkumar.com/2010/10/21/memcheck-a-memory-error-detection-tool</id>
    <content type="html"><![CDATA[<p>Linux distros provide a  tool suite called <strong>&lsquo;Valgrind&rsquo;</strong> that consists of a number of tools that help you make your programs faster and more correct . The most popular tool out of this is called is <strong>memcheck</strong> that is used to detect memory related errors in C and C++ programs that can lead to serious issues like  segfaults and even more grevious issues like unpredictable behaviours .</p>

<p>Lets take a look into how we use the tool &lsquo;memcheck&rsquo; so that we detect , try and avoid the memory related issues in our program.</p>

<p>First of all we need to create a memory leak so that we have something to detect .</p>

<p>We write a program that consists of a memory leak . Here is one such in a file &lsquo; pgm.c&rsquo;</p>

<p><code>1 #include &lt;stdlib.h&gt;
2 #include &lt;string.h&gt;
3 void f(char *s)
4 {
5 char *x = malloc(strlen(s));
6 x[7] = 0;
7 }</code></p>

<p><code>8 int  main()
9 {
10 char *s="Hello";
11 f(s);
12 }</code></p>

<p>As you could see , there are two major memory related bugs in this code:</p>

<p>1) Trying to write in the location x[7] which is out of the allocated memory space .This will lead to what is called a <strong>&lsquo;heap block overrun</strong>&rsquo; .</p>

<p>2) The memory that is allocated to x remains unused . This memory becomes garbage on returning from the function . In short , you have seen a <strong>&lsquo;memory leak</strong> &rsquo;.</p>

<p>Now lets try and detect the two problems using memcheck :</p>

<p>You need to have valgrind installed in your system .
<strong>$ : apt-get install valgrind</strong>
if you don&rsquo;t have it already .</p>

<p>Do</p>

<p><strong>$: cc -g pgm.c</strong></p>

<p>We  compile the program using the -g option so that the line number informations are displayed when using memcheck .</p>

<p>Do</p>

<p><strong>$: valgrind  &mdash;leak-check = yes a.out</strong></p>

<p>the option  &lsquo; &mdash;leak-check &rsquo; being set equal to yes displays the informations on memory leak issues .</p>

<p>Now lets look out what are the informations that are being displayed when the memcheck tool is used .</p>

<p>First lets have a look into the &lsquo;heap block overrun&rsquo; problem :</p>

<p><code>==3350== Invalid write of size 1
==3350==    at 0x80483F6: f (pgm.c:6)
==3350==    by 0x804841D: main (pgm.c:11)
==3350==  Address 0x419102f is 2 bytes after a block of size 5 alloc'd
==3350==    at 0x4023D6E: malloc (vg_replace_malloc.c:207)
==3350==    by 0x80483EC: f (pgm.c:5)
==3350==    by 0x804841D: main (pgm.c:11)</code></p>

<p>The above few lines is the code that was generated by memcheck  .</p>

<p>&lsquo;3350&rsquo; is the process id .</p>

<p>The actual error is seen right at the first line .</p>

<p>&lsquo;Invalid write  of size 1&rsquo; .</p>

<p>You get a stack trace right after this line , that</p>

<p>the invalid write has occured at the 6th line as a result of the 12th line . You could see what line numbers &lsquo;6&rsquo; and &lsquo;11&rsquo; do by having a look into our code , its the point of occurence of the error and the function call respectively.</p>

<p>A line showing the the fact that the location you are trying to access ( x[7] ) is 2 bytes after the allocated area can also be seen added with lines that contain information about the main and the function   .These lines provide great help to the programmer especially when the case becomes a lot more complicated .</p>

<p>Now the informations that are displayed about the &lsquo;memory leak problem&rsquo; can also be looked into .</p>

<p><code>==3350== LEAK SUMMARY:
==3350==    definitely lost: 5 bytes in 1 blocks.
==3350==    possibly lost: 0 bytes in 0 blocks.
==3350==    still reachable: 0 bytes in 0 blocks.
==3350==    suppressed: 0 bytes in 0 blocks.
</code>
You could view the lines that provide information about the memory leak problem .
The first line of the &lsquo;LEAK SUMMARY &rsquo; is the most significant to us . It shows the amount of memory definitely lost ( 5 Bytes ). Changes need to be made in the program so that the memory leak is prevented .</p>

<p>Memcheck produces these result which helps the programmer so as to view and correct the memory related issues rather convincingly . It needs to be noted that Memcheck is a <strong>&lsquo;dynamic instrumentation tool </strong>&rsquo; and not a static tool like &lsquo;lint &rsquo; . Hence to detect the memory leaks in a program , the control actually needs to get transferred to that segment of the program where the issues occur . In short you need to invoke the function &lsquo;f&rsquo; from your &lsquo;main&rsquo; so that Memcheck could detect those memory related issues that exists within the function &lsquo;f&rsquo; .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Common Subexpression elimination by GCC]]></title>
    <link href="http://tech.sunilnkumar.com/2010/10/19/common-subexpression-elimination-cse"/>
    <updated>2010-10-19T17:12:16+05:30</updated>
    <id>http://tech.sunilnkumar.com/2010/10/19/common-subexpression-elimination-cse</id>
    <content type="html"><![CDATA[<p><strong>Common subexpression elimination</strong> (CSE) is a compiler optimization technique of finding redundant expression evaluations, and replacing them with a single computation . This saves the time overhead resulted by evaluating the expression for more than once . We will have a look into this phenomenon by considering a simple code and again taking a walk through its assembly code .</p>

<p>Consider the code that we have written and saved in file &lsquo; pgm.c &rsquo;</p>

<p><code>main(){
int i, j, k, r;
scanf("%d%d", &amp;i, &amp;j);
k = i + j + 10;
r = i + j + 30;
printf("%d %d\n", k, r);
}</code></p>

<p>Do :</p>

<p><strong>$ : cc -S pgm.c</strong></p>

<p><strong>$ : less pgm.s</strong></p>

<p>Read the assembly code &lsquo; pgm.s &rsquo;</p>

<p>Scan the assembly code and find out the call to the function &lsquo;scanf()&rsquo; . This is where our area of interest begins . This is because its after calling &lsquo;scanf &rsquo; that we load the value of the input variables into the registers .</p>

<p>Right after the call to &lsquo;scanf &rsquo; , i have this in my assembly code ,</p>

<p><strong>movl    -16(%ebp), %edx
movl    -20(%ebp), %eax</strong> .</p>

<p>Here we move the values of the two variables &lsquo;i &rsquo; and &lsquo;j &rsquo; into registers &lsquo;edx &rsquo; and &lsquo;eax &rsquo; .</p>

<p>Now just have a look into our C code and you will see the two expressions as follows :</p>

<p><code>k = i + j + 10;
r = i + j + 30;</code></p>

<p>Looking at the two expressions , you would find out the redundant part in the two expressions .</p>

<p>Its that &lsquo;i+j&rsquo; is calculated twice .</p>

<p>Now lets find out what happens in the assembly code :</p>

<p>I had these statements in your assembly code :</p>

<p><strong>movl    -16(%ebp), %edx</strong></p>

<p><strong>movl    -20(%ebp), %eax</strong> &mdash;&mdash;&mdash;&mdash;&mdash;> We had mentioned these two statements  above .</p>

<p><strong>leal   (%edx,%eax), %eax</strong> &mdash;&mdash;&mdash;&mdash;>  values in edx and eax are added and loaded into eax</p>

<p><strong>addl    $10, %eax</strong> &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;>  the constant 10 is added with the value in eax</p>

<p><strong>leal   (%edx,%eax), %eax</strong> &mdash;&mdash;&mdash;&mdash;&ndash;>   values in edx and eax are added and loaded into eax</p>

<p><strong>addl    $30, %eax</strong> &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;>  the constant 30 is added with the value in eax</p>

<p>You could see that there is redundancy in the assembly code .</p>

<p>The statement<strong> &lsquo; leal(%edx,%eax), %eax</strong> &rsquo; performs the evaluation of the subexpression ( &lsquo; i + j &rsquo; ) which is done twice thereby throwing in redundancy and hence creating unnecessary overheads .</p>

<p>Obviously our compiler when asked to perform optimization would avoid this redundancy .This is what is termed as <strong>Common Subexpression Elimination</strong> ,i.e , the subexpression that is common( &lsquo; i + j &rsquo; ) in the two expressions is evaluated only once , in essence the second evaluation is eliminated .  Lets have a look into CSE by again peeping into our assembly code  .</p>

<p>Do</p>

<p><strong>$ : cc &ndash; S &ndash; O3 pgm .c</strong></p>

<p><strong>$ : less pgm.s</strong></p>

<p>Take a look into your assembly code  .</p>

<p>As mentioned above , our area of interest starts from the call to &lsquo;scanf ()&rsquo; .</p>

<p>Instead of those 6 statements that were used to evaluate those two expressions ,</p>

<p>i + j + 10 &amp; i + j + 30 ,</p>

<p>you would find this ,</p>

<p><strong>movl    -12(%ebp), %eax </strong>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;>  move the value of the variable &lsquo;i&rsquo; into eax</p>

<p><strong>addl    -8(%ebp), %eax </strong>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;> add the value of the variable &lsquo;j&rsquo; with &lsquo;i&rsquo; stored in eax .</p>

<p><strong>leal    30(%eax), %edx</strong> &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;> adds 30 with eax ( contains the sum of i &amp; j ) and stores in edx</p>

<p><strong>addl    $10, %eax </strong>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;> adds 10 with eax ( contains the sum of i &amp; j ) and stores in eax .</p>

<p>Here the second statement performs the evaluation of the subexpression , &lsquo; i + j &rsquo; . You could get it quite clearly from the code segment that the redundancy that was found in the unoptimized assembly code has been eliminated by the compiler .</p>

<p>The later 2 statements perform the evaluation of the expressions</p>

<p>( i + j + 30 )   and    ( i + j + 10 ) respectively .</p>

<p>We have just used a very simple case of CSE , but this optimization technique could be used in even more useful cases . Consider :</p>

<p>k = f() + g() + 30</p>

<p>r = f() + g() + 10</p>

<p>where f() and g() are functions . In an unoptimized code , the technique of CSE wouldn&rsquo;t be used and hence there would be overhead due to the redundancy added with the more serious problem of having to call each function twice . The technique of <strong>Common Subexpression Elimination</strong> avoids this very redundancy  .</p>
]]></content>
  </entry>
  
</feed>
